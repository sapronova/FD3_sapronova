// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Проверка кнопки сортировки списка абонентов: активные 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileCompany
    clients={
      Array [
        Object {
          "balance": 200,
          "fam": "Иванов",
          "id": 101,
          "im": "Иван",
          "otch": "Иванович",
        },
        Object {
          "balance": -250,
          "fam": "Сидоров",
          "id": 105,
          "im": "Сидор",
          "otch": "Сидорович",
        },
        Object {
          "balance": 180,
          "fam": "Петров",
          "id": 110,
          "im": "Пётр",
          "otch": "Петрович",
        },
        Object {
          "balance": 220,
          "fam": "Григорьев",
          "id": 120,
          "im": "Григорий",
          "otch": "Григорьевич",
        },
      ]
    }
    name="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="mts"
          onClick={[Function]}
          type="button"
          value="MTS"
        />,
        <input
          onClick={[Function]}
          type="button"
          value="Velcom"
        />,
        <div
          className="MobileCompanyName"
        >
          Компания «
          Velcom
          »
        </div>,
        <input
          className="All"
          id="Все"
          onClick={[Function]}
          type="button"
        />,
        <input
          className="ButtonActive"
          onClick={[Function]}
          type="button"
          value="Активные"
        />,
        <input
          className="ButtonBlocked"
          onClick={[Function]}
          type="button"
          value="Заблокированные"
        />,
        <table
          className="ItemsList"
        >
          <thead>
            <tr
              className="ListHeader"
            >
              <th>
                Фамилия
              </th>
              <th>
                Имя
              </th>
              <th>
                Отчество
              </th>
              <th>
                Баланс
              </th>
              <th>
                Статус
              </th>
              <th>
                Редактировать
              </th>
              <th>
                Удалить
              </th>
            </tr>
          </thead>
          <tbody
            className="MobileCompanyClients"
          >
            <MobileClient
              info={
                Object {
                  "balance": 200,
                  "fam": "Иванов",
                  "id": 101,
                  "im": "Иван",
                  "otch": "Иванович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": -250,
                  "fam": "Сидоров",
                  "id": 105,
                  "im": "Сидор",
                  "otch": "Сидорович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 180,
                  "fam": "Петров",
                  "id": 110,
                  "im": "Пётр",
                  "otch": "Петрович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 220,
                  "fam": "Григорьев",
                  "id": 120,
                  "im": "Григорий",
                  "otch": "Григорьевич",
                }
              }
            />
          </tbody>
        </table>,
        <input
          className="AddNewClient"
          disabled={false}
          onClick={[Function]}
          type="button"
          value="Добавить клиента"
        />,
        false,
        false,
      ],
      "className": "MobileCompany",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mts",
          "onClick": [Function],
          "type": "button",
          "value": "MTS",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onClick": [Function],
          "type": "button",
          "value": "Velcom",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "className": "MobileCompanyName",
        },
        "ref": null,
        "rendered": Array [
          "Компания «",
          "Velcom",
          "»",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "All",
          "id": "Все",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonActive",
          "onClick": [Function],
          "type": "button",
          "value": "Активные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonBlocked",
          "onClick": [Function],
          "type": "button",
          "value": "Заблокированные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>,
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>,
          ],
          "className": "ItemsList",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Фамилия
                  </th>,
                  <th>
                    Имя
                  </th>,
                  <th>
                    Отчество
                  </th>,
                  <th>
                    Баланс
                  </th>,
                  <th>
                    Статус
                  </th>,
                  <th>
                    Редактировать
                  </th>,
                  <th>
                    Удалить
                  </th>,
                ],
                "className": "ListHeader",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчество",
                  },
                  "ref": null,
                  "rendered": "Отчество",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Редактировать",
                  },
                  "ref": null,
                  "rendered": "Редактировать",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Удалить",
                  },
                  "ref": null,
                  "rendered": "Удалить",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />,
              ],
              "className": "MobileCompanyClients",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "101",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "105",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "110",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "120",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "AddNewClient",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "value": "Добавить клиента",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="mts"
            onClick={[Function]}
            type="button"
            value="MTS"
          />,
          <input
            onClick={[Function]}
            type="button"
            value="Velcom"
          />,
          <div
            className="MobileCompanyName"
          >
            Компания «
            Velcom
            »
          </div>,
          <input
            className="All"
            id="Все"
            onClick={[Function]}
            type="button"
          />,
          <input
            className="ButtonActive"
            onClick={[Function]}
            type="button"
            value="Активные"
          />,
          <input
            className="ButtonBlocked"
            onClick={[Function]}
            type="button"
            value="Заблокированные"
          />,
          <table
            className="ItemsList"
          >
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>
          </table>,
          <input
            className="AddNewClient"
            disabled={false}
            onClick={[Function]}
            type="button"
            value="Добавить клиента"
          />,
          false,
          false,
        ],
        "className": "MobileCompany",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mts",
            "onClick": [Function],
            "type": "button",
            "value": "MTS",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
            "type": "button",
            "value": "Velcom",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Компания «",
              "Velcom",
              "»",
            ],
            "className": "MobileCompanyName",
          },
          "ref": null,
          "rendered": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "All",
            "id": "Все",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonActive",
            "onClick": [Function],
            "type": "button",
            "value": "Активные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonBlocked",
            "onClick": [Function],
            "type": "button",
            "value": "Заблокированные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>
              </thead>,
              <tbody
                className="MobileCompanyClients"
              >
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "ItemsList",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Фамилия
                    </th>,
                    <th>
                      Имя
                    </th>,
                    <th>
                      Отчество
                    </th>,
                    <th>
                      Баланс
                    </th>,
                    <th>
                      Статус
                    </th>,
                    <th>
                      Редактировать
                    </th>,
                    <th>
                      Удалить
                    </th>,
                  ],
                  "className": "ListHeader",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчество",
                    },
                    "ref": null,
                    "rendered": "Отчество",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Редактировать",
                    },
                    "ref": null,
                    "rendered": "Редактировать",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Удалить",
                    },
                    "ref": null,
                    "rendered": "Удалить",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    info={
                      Object {
                        "balance": 200,
                        "fam": "Иванов",
                        "id": 101,
                        "im": "Иван",
                        "otch": "Иванович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": -250,
                        "fam": "Сидоров",
                        "id": 105,
                        "im": "Сидор",
                        "otch": "Сидорович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 180,
                        "fam": "Петров",
                        "id": 110,
                        "im": "Пётр",
                        "otch": "Петрович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 220,
                        "fam": "Григорьев",
                        "id": 120,
                        "im": "Григорий",
                        "otch": "Григорьевич",
                      }
                    }
                  />,
                ],
                "className": "MobileCompanyClients",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "101",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "105",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "110",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "120",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "AddNewClient",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "value": "Добавить клиента",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Проверка кнопки сортировки списка абонентов: активные 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileCompany
    clients={
      Array [
        Object {
          "balance": 200,
          "fam": "Иванов",
          "id": 101,
          "im": "Иван",
          "otch": "Иванович",
        },
        Object {
          "balance": -250,
          "fam": "Сидоров",
          "id": 105,
          "im": "Сидор",
          "otch": "Сидорович",
        },
        Object {
          "balance": 180,
          "fam": "Петров",
          "id": 110,
          "im": "Пётр",
          "otch": "Петрович",
        },
        Object {
          "balance": 220,
          "fam": "Григорьев",
          "id": 120,
          "im": "Григорий",
          "otch": "Григорьевич",
        },
      ]
    }
    name="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="mts"
          onClick={[Function]}
          type="button"
          value="MTS"
        />,
        <input
          onClick={[Function]}
          type="button"
          value="Velcom"
        />,
        <div
          className="MobileCompanyName"
        >
          Компания «
          Velcom
          »
        </div>,
        <input
          className="All"
          id="Все"
          onClick={[Function]}
          type="button"
        />,
        <input
          className="ButtonActive"
          onClick={[Function]}
          type="button"
          value="Активные"
        />,
        <input
          className="ButtonBlocked"
          onClick={[Function]}
          type="button"
          value="Заблокированные"
        />,
        <table
          className="ItemsList"
        >
          <thead>
            <tr
              className="ListHeader"
            >
              <th>
                Фамилия
              </th>
              <th>
                Имя
              </th>
              <th>
                Отчество
              </th>
              <th>
                Баланс
              </th>
              <th>
                Статус
              </th>
              <th>
                Редактировать
              </th>
              <th>
                Удалить
              </th>
            </tr>
          </thead>
          <tbody
            className="MobileCompanyClients"
          >
            <MobileClient
              info={
                Object {
                  "balance": 200,
                  "fam": "Иванов",
                  "id": 101,
                  "im": "Иван",
                  "otch": "Иванович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 180,
                  "fam": "Петров",
                  "id": 110,
                  "im": "Пётр",
                  "otch": "Петрович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 220,
                  "fam": "Григорьев",
                  "id": 120,
                  "im": "Григорий",
                  "otch": "Григорьевич",
                }
              }
            />
          </tbody>
        </table>,
        <input
          className="AddNewClient"
          disabled={false}
          onClick={[Function]}
          type="button"
          value="Добавить клиента"
        />,
        false,
        false,
      ],
      "className": "MobileCompany",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mts",
          "onClick": [Function],
          "type": "button",
          "value": "MTS",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onClick": [Function],
          "type": "button",
          "value": "Velcom",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "className": "MobileCompanyName",
        },
        "ref": null,
        "rendered": Array [
          "Компания «",
          "Velcom",
          "»",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "All",
          "id": "Все",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonActive",
          "onClick": [Function],
          "type": "button",
          "value": "Активные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonBlocked",
          "onClick": [Function],
          "type": "button",
          "value": "Заблокированные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>,
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>,
          ],
          "className": "ItemsList",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Фамилия
                  </th>,
                  <th>
                    Имя
                  </th>,
                  <th>
                    Отчество
                  </th>,
                  <th>
                    Баланс
                  </th>,
                  <th>
                    Статус
                  </th>,
                  <th>
                    Редактировать
                  </th>,
                  <th>
                    Удалить
                  </th>,
                ],
                "className": "ListHeader",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчество",
                  },
                  "ref": null,
                  "rendered": "Отчество",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Редактировать",
                  },
                  "ref": null,
                  "rendered": "Редактировать",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Удалить",
                  },
                  "ref": null,
                  "rendered": "Удалить",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />,
                undefined,
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />,
              ],
              "className": "MobileCompanyClients",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "101",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              undefined,
              Object {
                "instance": null,
                "key": "110",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "120",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "AddNewClient",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "value": "Добавить клиента",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="mts"
            onClick={[Function]}
            type="button"
            value="MTS"
          />,
          <input
            onClick={[Function]}
            type="button"
            value="Velcom"
          />,
          <div
            className="MobileCompanyName"
          >
            Компания «
            Velcom
            »
          </div>,
          <input
            className="All"
            id="Все"
            onClick={[Function]}
            type="button"
          />,
          <input
            className="ButtonActive"
            onClick={[Function]}
            type="button"
            value="Активные"
          />,
          <input
            className="ButtonBlocked"
            onClick={[Function]}
            type="button"
            value="Заблокированные"
          />,
          <table
            className="ItemsList"
          >
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>
          </table>,
          <input
            className="AddNewClient"
            disabled={false}
            onClick={[Function]}
            type="button"
            value="Добавить клиента"
          />,
          false,
          false,
        ],
        "className": "MobileCompany",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mts",
            "onClick": [Function],
            "type": "button",
            "value": "MTS",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
            "type": "button",
            "value": "Velcom",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Компания «",
              "Velcom",
              "»",
            ],
            "className": "MobileCompanyName",
          },
          "ref": null,
          "rendered": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "All",
            "id": "Все",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonActive",
            "onClick": [Function],
            "type": "button",
            "value": "Активные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonBlocked",
            "onClick": [Function],
            "type": "button",
            "value": "Заблокированные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>
              </thead>,
              <tbody
                className="MobileCompanyClients"
              >
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "ItemsList",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Фамилия
                    </th>,
                    <th>
                      Имя
                    </th>,
                    <th>
                      Отчество
                    </th>,
                    <th>
                      Баланс
                    </th>,
                    <th>
                      Статус
                    </th>,
                    <th>
                      Редактировать
                    </th>,
                    <th>
                      Удалить
                    </th>,
                  ],
                  "className": "ListHeader",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчество",
                    },
                    "ref": null,
                    "rendered": "Отчество",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Редактировать",
                    },
                    "ref": null,
                    "rendered": "Редактировать",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Удалить",
                    },
                    "ref": null,
                    "rendered": "Удалить",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    info={
                      Object {
                        "balance": 200,
                        "fam": "Иванов",
                        "id": 101,
                        "im": "Иван",
                        "otch": "Иванович",
                      }
                    }
                  />,
                  undefined,
                  <MobileClient
                    info={
                      Object {
                        "balance": 180,
                        "fam": "Петров",
                        "id": 110,
                        "im": "Пётр",
                        "otch": "Петрович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 220,
                        "fam": "Григорьев",
                        "id": 120,
                        "im": "Григорий",
                        "otch": "Григорьевич",
                      }
                    }
                  />,
                ],
                "className": "MobileCompanyClients",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "101",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                undefined,
                Object {
                  "instance": null,
                  "key": "110",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "120",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "AddNewClient",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "value": "Добавить клиента",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Проверка кнопки сортировки списка абонентов: активные 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileCompany
    clients={
      Array [
        Object {
          "balance": 200,
          "fam": "Иванов",
          "id": 101,
          "im": "Иван",
          "otch": "Иванович",
        },
        Object {
          "balance": -250,
          "fam": "Сидоров",
          "id": 105,
          "im": "Сидор",
          "otch": "Сидорович",
        },
        Object {
          "balance": 180,
          "fam": "Петров",
          "id": 110,
          "im": "Пётр",
          "otch": "Петрович",
        },
        Object {
          "balance": 220,
          "fam": "Григорьев",
          "id": 120,
          "im": "Григорий",
          "otch": "Григорьевич",
        },
      ]
    }
    name="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="mts"
          onClick={[Function]}
          type="button"
          value="MTS"
        />,
        <input
          onClick={[Function]}
          type="button"
          value="Velcom"
        />,
        <div
          className="MobileCompanyName"
        >
          Компания «
          Velcom
          »
        </div>,
        <input
          className="All"
          id="Все"
          onClick={[Function]}
          type="button"
        />,
        <input
          className="ButtonActive"
          onClick={[Function]}
          type="button"
          value="Активные"
        />,
        <input
          className="ButtonBlocked"
          onClick={[Function]}
          type="button"
          value="Заблокированные"
        />,
        <table
          className="ItemsList"
        >
          <thead>
            <tr
              className="ListHeader"
            >
              <th>
                Фамилия
              </th>
              <th>
                Имя
              </th>
              <th>
                Отчество
              </th>
              <th>
                Баланс
              </th>
              <th>
                Статус
              </th>
              <th>
                Редактировать
              </th>
              <th>
                Удалить
              </th>
            </tr>
          </thead>
          <tbody
            className="MobileCompanyClients"
          >
            <MobileClient
              info={
                Object {
                  "balance": 200,
                  "fam": "Иванов",
                  "id": 101,
                  "im": "Иван",
                  "otch": "Иванович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": -250,
                  "fam": "Сидоров",
                  "id": 105,
                  "im": "Сидор",
                  "otch": "Сидорович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 180,
                  "fam": "Петров",
                  "id": 110,
                  "im": "Пётр",
                  "otch": "Петрович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 220,
                  "fam": "Григорьев",
                  "id": 120,
                  "im": "Григорий",
                  "otch": "Григорьевич",
                }
              }
            />
          </tbody>
        </table>,
        <input
          className="AddNewClient"
          disabled={false}
          onClick={[Function]}
          type="button"
          value="Добавить клиента"
        />,
        false,
        false,
      ],
      "className": "MobileCompany",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mts",
          "onClick": [Function],
          "type": "button",
          "value": "MTS",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onClick": [Function],
          "type": "button",
          "value": "Velcom",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "className": "MobileCompanyName",
        },
        "ref": null,
        "rendered": Array [
          "Компания «",
          "Velcom",
          "»",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "All",
          "id": "Все",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonActive",
          "onClick": [Function],
          "type": "button",
          "value": "Активные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonBlocked",
          "onClick": [Function],
          "type": "button",
          "value": "Заблокированные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>,
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>,
          ],
          "className": "ItemsList",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Фамилия
                  </th>,
                  <th>
                    Имя
                  </th>,
                  <th>
                    Отчество
                  </th>,
                  <th>
                    Баланс
                  </th>,
                  <th>
                    Статус
                  </th>,
                  <th>
                    Редактировать
                  </th>,
                  <th>
                    Удалить
                  </th>,
                ],
                "className": "ListHeader",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчество",
                  },
                  "ref": null,
                  "rendered": "Отчество",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Редактировать",
                  },
                  "ref": null,
                  "rendered": "Редактировать",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Удалить",
                  },
                  "ref": null,
                  "rendered": "Удалить",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />,
              ],
              "className": "MobileCompanyClients",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "101",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "105",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "110",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "120",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "AddNewClient",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "value": "Добавить клиента",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="mts"
            onClick={[Function]}
            type="button"
            value="MTS"
          />,
          <input
            onClick={[Function]}
            type="button"
            value="Velcom"
          />,
          <div
            className="MobileCompanyName"
          >
            Компания «
            Velcom
            »
          </div>,
          <input
            className="All"
            id="Все"
            onClick={[Function]}
            type="button"
          />,
          <input
            className="ButtonActive"
            onClick={[Function]}
            type="button"
            value="Активные"
          />,
          <input
            className="ButtonBlocked"
            onClick={[Function]}
            type="button"
            value="Заблокированные"
          />,
          <table
            className="ItemsList"
          >
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>
          </table>,
          <input
            className="AddNewClient"
            disabled={false}
            onClick={[Function]}
            type="button"
            value="Добавить клиента"
          />,
          false,
          false,
        ],
        "className": "MobileCompany",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mts",
            "onClick": [Function],
            "type": "button",
            "value": "MTS",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
            "type": "button",
            "value": "Velcom",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Компания «",
              "Velcom",
              "»",
            ],
            "className": "MobileCompanyName",
          },
          "ref": null,
          "rendered": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "All",
            "id": "Все",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonActive",
            "onClick": [Function],
            "type": "button",
            "value": "Активные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonBlocked",
            "onClick": [Function],
            "type": "button",
            "value": "Заблокированные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>
              </thead>,
              <tbody
                className="MobileCompanyClients"
              >
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "ItemsList",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Фамилия
                    </th>,
                    <th>
                      Имя
                    </th>,
                    <th>
                      Отчество
                    </th>,
                    <th>
                      Баланс
                    </th>,
                    <th>
                      Статус
                    </th>,
                    <th>
                      Редактировать
                    </th>,
                    <th>
                      Удалить
                    </th>,
                  ],
                  "className": "ListHeader",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчество",
                    },
                    "ref": null,
                    "rendered": "Отчество",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Редактировать",
                    },
                    "ref": null,
                    "rendered": "Редактировать",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Удалить",
                    },
                    "ref": null,
                    "rendered": "Удалить",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    info={
                      Object {
                        "balance": 200,
                        "fam": "Иванов",
                        "id": 101,
                        "im": "Иван",
                        "otch": "Иванович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": -250,
                        "fam": "Сидоров",
                        "id": 105,
                        "im": "Сидор",
                        "otch": "Сидорович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 180,
                        "fam": "Петров",
                        "id": 110,
                        "im": "Пётр",
                        "otch": "Петрович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 220,
                        "fam": "Григорьев",
                        "id": 120,
                        "im": "Григорий",
                        "otch": "Григорьевич",
                      }
                    }
                  />,
                ],
                "className": "MobileCompanyClients",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "101",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "105",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "110",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "120",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "AddNewClient",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "value": "Добавить клиента",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Проверка кнопки сортировки списка абонентов: активные 4`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileCompany
    clients={
      Array [
        Object {
          "balance": 200,
          "fam": "Иванов",
          "id": 101,
          "im": "Иван",
          "otch": "Иванович",
        },
        Object {
          "balance": -250,
          "fam": "Сидоров",
          "id": 105,
          "im": "Сидор",
          "otch": "Сидорович",
        },
        Object {
          "balance": 180,
          "fam": "Петров",
          "id": 110,
          "im": "Пётр",
          "otch": "Петрович",
        },
        Object {
          "balance": 220,
          "fam": "Григорьев",
          "id": 120,
          "im": "Григорий",
          "otch": "Григорьевич",
        },
      ]
    }
    name="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="mts"
          onClick={[Function]}
          type="button"
          value="MTS"
        />,
        <input
          onClick={[Function]}
          type="button"
          value="Velcom"
        />,
        <div
          className="MobileCompanyName"
        >
          Компания «
          Velcom
          »
        </div>,
        <input
          className="All"
          id="Все"
          onClick={[Function]}
          type="button"
        />,
        <input
          className="ButtonActive"
          onClick={[Function]}
          type="button"
          value="Активные"
        />,
        <input
          className="ButtonBlocked"
          onClick={[Function]}
          type="button"
          value="Заблокированные"
        />,
        <table
          className="ItemsList"
        >
          <thead>
            <tr
              className="ListHeader"
            >
              <th>
                Фамилия
              </th>
              <th>
                Имя
              </th>
              <th>
                Отчество
              </th>
              <th>
                Баланс
              </th>
              <th>
                Статус
              </th>
              <th>
                Редактировать
              </th>
              <th>
                Удалить
              </th>
            </tr>
          </thead>
          <tbody
            className="MobileCompanyClients"
          >
            <MobileClient
              info={
                Object {
                  "balance": 200,
                  "fam": "Иванов",
                  "id": 101,
                  "im": "Иван",
                  "otch": "Иванович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 180,
                  "fam": "Петров",
                  "id": 110,
                  "im": "Пётр",
                  "otch": "Петрович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 220,
                  "fam": "Григорьев",
                  "id": 120,
                  "im": "Григорий",
                  "otch": "Григорьевич",
                }
              }
            />
          </tbody>
        </table>,
        <input
          className="AddNewClient"
          disabled={false}
          onClick={[Function]}
          type="button"
          value="Добавить клиента"
        />,
        false,
        false,
      ],
      "className": "MobileCompany",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mts",
          "onClick": [Function],
          "type": "button",
          "value": "MTS",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onClick": [Function],
          "type": "button",
          "value": "Velcom",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "className": "MobileCompanyName",
        },
        "ref": null,
        "rendered": Array [
          "Компания «",
          "Velcom",
          "»",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "All",
          "id": "Все",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonActive",
          "onClick": [Function],
          "type": "button",
          "value": "Активные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonBlocked",
          "onClick": [Function],
          "type": "button",
          "value": "Заблокированные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>,
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>,
          ],
          "className": "ItemsList",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Фамилия
                  </th>,
                  <th>
                    Имя
                  </th>,
                  <th>
                    Отчество
                  </th>,
                  <th>
                    Баланс
                  </th>,
                  <th>
                    Статус
                  </th>,
                  <th>
                    Редактировать
                  </th>,
                  <th>
                    Удалить
                  </th>,
                ],
                "className": "ListHeader",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчество",
                  },
                  "ref": null,
                  "rendered": "Отчество",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Редактировать",
                  },
                  "ref": null,
                  "rendered": "Редактировать",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Удалить",
                  },
                  "ref": null,
                  "rendered": "Удалить",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />,
                undefined,
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />,
              ],
              "className": "MobileCompanyClients",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "101",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              undefined,
              Object {
                "instance": null,
                "key": "110",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "120",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "AddNewClient",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "value": "Добавить клиента",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="mts"
            onClick={[Function]}
            type="button"
            value="MTS"
          />,
          <input
            onClick={[Function]}
            type="button"
            value="Velcom"
          />,
          <div
            className="MobileCompanyName"
          >
            Компания «
            Velcom
            »
          </div>,
          <input
            className="All"
            id="Все"
            onClick={[Function]}
            type="button"
          />,
          <input
            className="ButtonActive"
            onClick={[Function]}
            type="button"
            value="Активные"
          />,
          <input
            className="ButtonBlocked"
            onClick={[Function]}
            type="button"
            value="Заблокированные"
          />,
          <table
            className="ItemsList"
          >
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>
          </table>,
          <input
            className="AddNewClient"
            disabled={false}
            onClick={[Function]}
            type="button"
            value="Добавить клиента"
          />,
          false,
          false,
        ],
        "className": "MobileCompany",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mts",
            "onClick": [Function],
            "type": "button",
            "value": "MTS",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
            "type": "button",
            "value": "Velcom",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Компания «",
              "Velcom",
              "»",
            ],
            "className": "MobileCompanyName",
          },
          "ref": null,
          "rendered": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "All",
            "id": "Все",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonActive",
            "onClick": [Function],
            "type": "button",
            "value": "Активные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonBlocked",
            "onClick": [Function],
            "type": "button",
            "value": "Заблокированные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>
              </thead>,
              <tbody
                className="MobileCompanyClients"
              >
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "ItemsList",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Фамилия
                    </th>,
                    <th>
                      Имя
                    </th>,
                    <th>
                      Отчество
                    </th>,
                    <th>
                      Баланс
                    </th>,
                    <th>
                      Статус
                    </th>,
                    <th>
                      Редактировать
                    </th>,
                    <th>
                      Удалить
                    </th>,
                  ],
                  "className": "ListHeader",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчество",
                    },
                    "ref": null,
                    "rendered": "Отчество",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Редактировать",
                    },
                    "ref": null,
                    "rendered": "Редактировать",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Удалить",
                    },
                    "ref": null,
                    "rendered": "Удалить",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    info={
                      Object {
                        "balance": 200,
                        "fam": "Иванов",
                        "id": 101,
                        "im": "Иван",
                        "otch": "Иванович",
                      }
                    }
                  />,
                  undefined,
                  <MobileClient
                    info={
                      Object {
                        "balance": 180,
                        "fam": "Петров",
                        "id": 110,
                        "im": "Пётр",
                        "otch": "Петрович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 220,
                        "fam": "Григорьев",
                        "id": 120,
                        "im": "Григорий",
                        "otch": "Григорьевич",
                      }
                    }
                  />,
                ],
                "className": "MobileCompanyClients",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "101",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                undefined,
                Object {
                  "instance": null,
                  "key": "110",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "120",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "AddNewClient",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "value": "Добавить клиента",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Проверка кнопки сортировки списка абонентов: все 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileCompany
    clients={
      Array [
        Object {
          "balance": 200,
          "fam": "Иванов",
          "id": 101,
          "im": "Иван",
          "otch": "Иванович",
        },
        Object {
          "balance": -250,
          "fam": "Сидоров",
          "id": 105,
          "im": "Сидор",
          "otch": "Сидорович",
        },
        Object {
          "balance": 180,
          "fam": "Петров",
          "id": 110,
          "im": "Пётр",
          "otch": "Петрович",
        },
        Object {
          "balance": 220,
          "fam": "Григорьев",
          "id": 120,
          "im": "Григорий",
          "otch": "Григорьевич",
        },
      ]
    }
    name="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="mts"
          onClick={[Function]}
          type="button"
          value="MTS"
        />,
        <input
          onClick={[Function]}
          type="button"
          value="Velcom"
        />,
        <div
          className="MobileCompanyName"
        >
          Компания «
          Velcom
          »
        </div>,
        <input
          className="All"
          id="Все"
          onClick={[Function]}
          type="button"
        />,
        <input
          className="ButtonActive"
          onClick={[Function]}
          type="button"
          value="Активные"
        />,
        <input
          className="ButtonBlocked"
          onClick={[Function]}
          type="button"
          value="Заблокированные"
        />,
        <table
          className="ItemsList"
        >
          <thead>
            <tr
              className="ListHeader"
            >
              <th>
                Фамилия
              </th>
              <th>
                Имя
              </th>
              <th>
                Отчество
              </th>
              <th>
                Баланс
              </th>
              <th>
                Статус
              </th>
              <th>
                Редактировать
              </th>
              <th>
                Удалить
              </th>
            </tr>
          </thead>
          <tbody
            className="MobileCompanyClients"
          >
            <MobileClient
              info={
                Object {
                  "balance": 200,
                  "fam": "Иванов",
                  "id": 101,
                  "im": "Иван",
                  "otch": "Иванович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": -250,
                  "fam": "Сидоров",
                  "id": 105,
                  "im": "Сидор",
                  "otch": "Сидорович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 180,
                  "fam": "Петров",
                  "id": 110,
                  "im": "Пётр",
                  "otch": "Петрович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 220,
                  "fam": "Григорьев",
                  "id": 120,
                  "im": "Григорий",
                  "otch": "Григорьевич",
                }
              }
            />
          </tbody>
        </table>,
        <input
          className="AddNewClient"
          disabled={false}
          onClick={[Function]}
          type="button"
          value="Добавить клиента"
        />,
        false,
        false,
      ],
      "className": "MobileCompany",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mts",
          "onClick": [Function],
          "type": "button",
          "value": "MTS",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onClick": [Function],
          "type": "button",
          "value": "Velcom",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "className": "MobileCompanyName",
        },
        "ref": null,
        "rendered": Array [
          "Компания «",
          "Velcom",
          "»",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "All",
          "id": "Все",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonActive",
          "onClick": [Function],
          "type": "button",
          "value": "Активные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonBlocked",
          "onClick": [Function],
          "type": "button",
          "value": "Заблокированные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>,
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>,
          ],
          "className": "ItemsList",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Фамилия
                  </th>,
                  <th>
                    Имя
                  </th>,
                  <th>
                    Отчество
                  </th>,
                  <th>
                    Баланс
                  </th>,
                  <th>
                    Статус
                  </th>,
                  <th>
                    Редактировать
                  </th>,
                  <th>
                    Удалить
                  </th>,
                ],
                "className": "ListHeader",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчество",
                  },
                  "ref": null,
                  "rendered": "Отчество",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Редактировать",
                  },
                  "ref": null,
                  "rendered": "Редактировать",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Удалить",
                  },
                  "ref": null,
                  "rendered": "Удалить",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />,
              ],
              "className": "MobileCompanyClients",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "101",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "105",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "110",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "120",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "AddNewClient",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "value": "Добавить клиента",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="mts"
            onClick={[Function]}
            type="button"
            value="MTS"
          />,
          <input
            onClick={[Function]}
            type="button"
            value="Velcom"
          />,
          <div
            className="MobileCompanyName"
          >
            Компания «
            Velcom
            »
          </div>,
          <input
            className="All"
            id="Все"
            onClick={[Function]}
            type="button"
          />,
          <input
            className="ButtonActive"
            onClick={[Function]}
            type="button"
            value="Активные"
          />,
          <input
            className="ButtonBlocked"
            onClick={[Function]}
            type="button"
            value="Заблокированные"
          />,
          <table
            className="ItemsList"
          >
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>
          </table>,
          <input
            className="AddNewClient"
            disabled={false}
            onClick={[Function]}
            type="button"
            value="Добавить клиента"
          />,
          false,
          false,
        ],
        "className": "MobileCompany",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mts",
            "onClick": [Function],
            "type": "button",
            "value": "MTS",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
            "type": "button",
            "value": "Velcom",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Компания «",
              "Velcom",
              "»",
            ],
            "className": "MobileCompanyName",
          },
          "ref": null,
          "rendered": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "All",
            "id": "Все",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonActive",
            "onClick": [Function],
            "type": "button",
            "value": "Активные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonBlocked",
            "onClick": [Function],
            "type": "button",
            "value": "Заблокированные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>
              </thead>,
              <tbody
                className="MobileCompanyClients"
              >
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "ItemsList",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Фамилия
                    </th>,
                    <th>
                      Имя
                    </th>,
                    <th>
                      Отчество
                    </th>,
                    <th>
                      Баланс
                    </th>,
                    <th>
                      Статус
                    </th>,
                    <th>
                      Редактировать
                    </th>,
                    <th>
                      Удалить
                    </th>,
                  ],
                  "className": "ListHeader",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчество",
                    },
                    "ref": null,
                    "rendered": "Отчество",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Редактировать",
                    },
                    "ref": null,
                    "rendered": "Редактировать",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Удалить",
                    },
                    "ref": null,
                    "rendered": "Удалить",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    info={
                      Object {
                        "balance": 200,
                        "fam": "Иванов",
                        "id": 101,
                        "im": "Иван",
                        "otch": "Иванович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": -250,
                        "fam": "Сидоров",
                        "id": 105,
                        "im": "Сидор",
                        "otch": "Сидорович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 180,
                        "fam": "Петров",
                        "id": 110,
                        "im": "Пётр",
                        "otch": "Петрович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 220,
                        "fam": "Григорьев",
                        "id": 120,
                        "im": "Григорий",
                        "otch": "Григорьевич",
                      }
                    }
                  />,
                ],
                "className": "MobileCompanyClients",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "101",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "105",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "110",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "120",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "AddNewClient",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "value": "Добавить клиента",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Проверка кнопки сортировки списка абонентов: все 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileCompany
    clients={
      Array [
        Object {
          "balance": 200,
          "fam": "Иванов",
          "id": 101,
          "im": "Иван",
          "otch": "Иванович",
        },
        Object {
          "balance": -250,
          "fam": "Сидоров",
          "id": 105,
          "im": "Сидор",
          "otch": "Сидорович",
        },
        Object {
          "balance": 180,
          "fam": "Петров",
          "id": 110,
          "im": "Пётр",
          "otch": "Петрович",
        },
        Object {
          "balance": 220,
          "fam": "Григорьев",
          "id": 120,
          "im": "Григорий",
          "otch": "Григорьевич",
        },
      ]
    }
    name="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="mts"
          onClick={[Function]}
          type="button"
          value="MTS"
        />,
        <input
          onClick={[Function]}
          type="button"
          value="Velcom"
        />,
        <div
          className="MobileCompanyName"
        >
          Компания «
          Velcom
          »
        </div>,
        <input
          className="All"
          id="Все"
          onClick={[Function]}
          type="button"
        />,
        <input
          className="ButtonActive"
          onClick={[Function]}
          type="button"
          value="Активные"
        />,
        <input
          className="ButtonBlocked"
          onClick={[Function]}
          type="button"
          value="Заблокированные"
        />,
        <table
          className="ItemsList"
        >
          <thead>
            <tr
              className="ListHeader"
            >
              <th>
                Фамилия
              </th>
              <th>
                Имя
              </th>
              <th>
                Отчество
              </th>
              <th>
                Баланс
              </th>
              <th>
                Статус
              </th>
              <th>
                Редактировать
              </th>
              <th>
                Удалить
              </th>
            </tr>
          </thead>
          <tbody
            className="MobileCompanyClients"
          >
            <MobileClient
              info={
                Object {
                  "balance": 200,
                  "fam": "Иванов",
                  "id": 101,
                  "im": "Иван",
                  "otch": "Иванович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": -250,
                  "fam": "Сидоров",
                  "id": 105,
                  "im": "Сидор",
                  "otch": "Сидорович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 180,
                  "fam": "Петров",
                  "id": 110,
                  "im": "Пётр",
                  "otch": "Петрович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 220,
                  "fam": "Григорьев",
                  "id": 120,
                  "im": "Григорий",
                  "otch": "Григорьевич",
                }
              }
            />
          </tbody>
        </table>,
        <input
          className="AddNewClient"
          disabled={false}
          onClick={[Function]}
          type="button"
          value="Добавить клиента"
        />,
        false,
        false,
      ],
      "className": "MobileCompany",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mts",
          "onClick": [Function],
          "type": "button",
          "value": "MTS",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onClick": [Function],
          "type": "button",
          "value": "Velcom",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "className": "MobileCompanyName",
        },
        "ref": null,
        "rendered": Array [
          "Компания «",
          "Velcom",
          "»",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "All",
          "id": "Все",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonActive",
          "onClick": [Function],
          "type": "button",
          "value": "Активные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonBlocked",
          "onClick": [Function],
          "type": "button",
          "value": "Заблокированные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>,
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>,
          ],
          "className": "ItemsList",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Фамилия
                  </th>,
                  <th>
                    Имя
                  </th>,
                  <th>
                    Отчество
                  </th>,
                  <th>
                    Баланс
                  </th>,
                  <th>
                    Статус
                  </th>,
                  <th>
                    Редактировать
                  </th>,
                  <th>
                    Удалить
                  </th>,
                ],
                "className": "ListHeader",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчество",
                  },
                  "ref": null,
                  "rendered": "Отчество",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Редактировать",
                  },
                  "ref": null,
                  "rendered": "Редактировать",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Удалить",
                  },
                  "ref": null,
                  "rendered": "Удалить",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />,
              ],
              "className": "MobileCompanyClients",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "101",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "105",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "110",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "120",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "AddNewClient",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "value": "Добавить клиента",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="mts"
            onClick={[Function]}
            type="button"
            value="MTS"
          />,
          <input
            onClick={[Function]}
            type="button"
            value="Velcom"
          />,
          <div
            className="MobileCompanyName"
          >
            Компания «
            Velcom
            »
          </div>,
          <input
            className="All"
            id="Все"
            onClick={[Function]}
            type="button"
          />,
          <input
            className="ButtonActive"
            onClick={[Function]}
            type="button"
            value="Активные"
          />,
          <input
            className="ButtonBlocked"
            onClick={[Function]}
            type="button"
            value="Заблокированные"
          />,
          <table
            className="ItemsList"
          >
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>
          </table>,
          <input
            className="AddNewClient"
            disabled={false}
            onClick={[Function]}
            type="button"
            value="Добавить клиента"
          />,
          false,
          false,
        ],
        "className": "MobileCompany",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mts",
            "onClick": [Function],
            "type": "button",
            "value": "MTS",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
            "type": "button",
            "value": "Velcom",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Компания «",
              "Velcom",
              "»",
            ],
            "className": "MobileCompanyName",
          },
          "ref": null,
          "rendered": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "All",
            "id": "Все",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonActive",
            "onClick": [Function],
            "type": "button",
            "value": "Активные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonBlocked",
            "onClick": [Function],
            "type": "button",
            "value": "Заблокированные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>
              </thead>,
              <tbody
                className="MobileCompanyClients"
              >
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "ItemsList",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Фамилия
                    </th>,
                    <th>
                      Имя
                    </th>,
                    <th>
                      Отчество
                    </th>,
                    <th>
                      Баланс
                    </th>,
                    <th>
                      Статус
                    </th>,
                    <th>
                      Редактировать
                    </th>,
                    <th>
                      Удалить
                    </th>,
                  ],
                  "className": "ListHeader",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчество",
                    },
                    "ref": null,
                    "rendered": "Отчество",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Редактировать",
                    },
                    "ref": null,
                    "rendered": "Редактировать",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Удалить",
                    },
                    "ref": null,
                    "rendered": "Удалить",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    info={
                      Object {
                        "balance": 200,
                        "fam": "Иванов",
                        "id": 101,
                        "im": "Иван",
                        "otch": "Иванович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": -250,
                        "fam": "Сидоров",
                        "id": 105,
                        "im": "Сидор",
                        "otch": "Сидорович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 180,
                        "fam": "Петров",
                        "id": 110,
                        "im": "Пётр",
                        "otch": "Петрович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 220,
                        "fam": "Григорьев",
                        "id": 120,
                        "im": "Григорий",
                        "otch": "Григорьевич",
                      }
                    }
                  />,
                ],
                "className": "MobileCompanyClients",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "101",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "105",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "110",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "120",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "AddNewClient",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "value": "Добавить клиента",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Проверка кнопки сортировки списка абонентов: заблокированные 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileCompany
    clients={
      Array [
        Object {
          "balance": 200,
          "fam": "Иванов",
          "id": 101,
          "im": "Иван",
          "otch": "Иванович",
        },
        Object {
          "balance": -250,
          "fam": "Сидоров",
          "id": 105,
          "im": "Сидор",
          "otch": "Сидорович",
        },
        Object {
          "balance": 180,
          "fam": "Петров",
          "id": 110,
          "im": "Пётр",
          "otch": "Петрович",
        },
        Object {
          "balance": 220,
          "fam": "Григорьев",
          "id": 120,
          "im": "Григорий",
          "otch": "Григорьевич",
        },
      ]
    }
    name="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="mts"
          onClick={[Function]}
          type="button"
          value="MTS"
        />,
        <input
          onClick={[Function]}
          type="button"
          value="Velcom"
        />,
        <div
          className="MobileCompanyName"
        >
          Компания «
          Velcom
          »
        </div>,
        <input
          className="All"
          id="Все"
          onClick={[Function]}
          type="button"
        />,
        <input
          className="ButtonActive"
          onClick={[Function]}
          type="button"
          value="Активные"
        />,
        <input
          className="ButtonBlocked"
          onClick={[Function]}
          type="button"
          value="Заблокированные"
        />,
        <table
          className="ItemsList"
        >
          <thead>
            <tr
              className="ListHeader"
            >
              <th>
                Фамилия
              </th>
              <th>
                Имя
              </th>
              <th>
                Отчество
              </th>
              <th>
                Баланс
              </th>
              <th>
                Статус
              </th>
              <th>
                Редактировать
              </th>
              <th>
                Удалить
              </th>
            </tr>
          </thead>
          <tbody
            className="MobileCompanyClients"
          >
            <MobileClient
              info={
                Object {
                  "balance": 200,
                  "fam": "Иванов",
                  "id": 101,
                  "im": "Иван",
                  "otch": "Иванович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": -250,
                  "fam": "Сидоров",
                  "id": 105,
                  "im": "Сидор",
                  "otch": "Сидорович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 180,
                  "fam": "Петров",
                  "id": 110,
                  "im": "Пётр",
                  "otch": "Петрович",
                }
              }
            />
            <MobileClient
              info={
                Object {
                  "balance": 220,
                  "fam": "Григорьев",
                  "id": 120,
                  "im": "Григорий",
                  "otch": "Григорьевич",
                }
              }
            />
          </tbody>
        </table>,
        <input
          className="AddNewClient"
          disabled={false}
          onClick={[Function]}
          type="button"
          value="Добавить клиента"
        />,
        false,
        false,
      ],
      "className": "MobileCompany",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mts",
          "onClick": [Function],
          "type": "button",
          "value": "MTS",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onClick": [Function],
          "type": "button",
          "value": "Velcom",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "className": "MobileCompanyName",
        },
        "ref": null,
        "rendered": Array [
          "Компания «",
          "Velcom",
          "»",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "All",
          "id": "Все",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonActive",
          "onClick": [Function],
          "type": "button",
          "value": "Активные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonBlocked",
          "onClick": [Function],
          "type": "button",
          "value": "Заблокированные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>,
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>,
          ],
          "className": "ItemsList",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Фамилия
                  </th>,
                  <th>
                    Имя
                  </th>,
                  <th>
                    Отчество
                  </th>,
                  <th>
                    Баланс
                  </th>,
                  <th>
                    Статус
                  </th>,
                  <th>
                    Редактировать
                  </th>,
                  <th>
                    Удалить
                  </th>,
                ],
                "className": "ListHeader",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчество",
                  },
                  "ref": null,
                  "rendered": "Отчество",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Редактировать",
                  },
                  "ref": null,
                  "rendered": "Редактировать",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Удалить",
                  },
                  "ref": null,
                  "rendered": "Удалить",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />,
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />,
              ],
              "className": "MobileCompanyClients",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "101",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "105",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "110",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "120",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "AddNewClient",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "value": "Добавить клиента",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="mts"
            onClick={[Function]}
            type="button"
            value="MTS"
          />,
          <input
            onClick={[Function]}
            type="button"
            value="Velcom"
          />,
          <div
            className="MobileCompanyName"
          >
            Компания «
            Velcom
            »
          </div>,
          <input
            className="All"
            id="Все"
            onClick={[Function]}
            type="button"
          />,
          <input
            className="ButtonActive"
            onClick={[Function]}
            type="button"
            value="Активные"
          />,
          <input
            className="ButtonBlocked"
            onClick={[Function]}
            type="button"
            value="Заблокированные"
          />,
          <table
            className="ItemsList"
          >
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": 200,
                    "fam": "Иванов",
                    "id": 101,
                    "im": "Иван",
                    "otch": "Иванович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 180,
                    "fam": "Петров",
                    "id": 110,
                    "im": "Пётр",
                    "otch": "Петрович",
                  }
                }
              />
              <MobileClient
                info={
                  Object {
                    "balance": 220,
                    "fam": "Григорьев",
                    "id": 120,
                    "im": "Григорий",
                    "otch": "Григорьевич",
                  }
                }
              />
            </tbody>
          </table>,
          <input
            className="AddNewClient"
            disabled={false}
            onClick={[Function]}
            type="button"
            value="Добавить клиента"
          />,
          false,
          false,
        ],
        "className": "MobileCompany",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mts",
            "onClick": [Function],
            "type": "button",
            "value": "MTS",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
            "type": "button",
            "value": "Velcom",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Компания «",
              "Velcom",
              "»",
            ],
            "className": "MobileCompanyName",
          },
          "ref": null,
          "rendered": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "All",
            "id": "Все",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonActive",
            "onClick": [Function],
            "type": "button",
            "value": "Активные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonBlocked",
            "onClick": [Function],
            "type": "button",
            "value": "Заблокированные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>
              </thead>,
              <tbody
                className="MobileCompanyClients"
              >
                <MobileClient
                  info={
                    Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    }
                  }
                />
                <MobileClient
                  info={
                    Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "ItemsList",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Фамилия
                    </th>,
                    <th>
                      Имя
                    </th>,
                    <th>
                      Отчество
                    </th>,
                    <th>
                      Баланс
                    </th>,
                    <th>
                      Статус
                    </th>,
                    <th>
                      Редактировать
                    </th>,
                    <th>
                      Удалить
                    </th>,
                  ],
                  "className": "ListHeader",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчество",
                    },
                    "ref": null,
                    "rendered": "Отчество",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Редактировать",
                    },
                    "ref": null,
                    "rendered": "Редактировать",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Удалить",
                    },
                    "ref": null,
                    "rendered": "Удалить",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    info={
                      Object {
                        "balance": 200,
                        "fam": "Иванов",
                        "id": 101,
                        "im": "Иван",
                        "otch": "Иванович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": -250,
                        "fam": "Сидоров",
                        "id": 105,
                        "im": "Сидор",
                        "otch": "Сидорович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 180,
                        "fam": "Петров",
                        "id": 110,
                        "im": "Пётр",
                        "otch": "Петрович",
                      }
                    }
                  />,
                  <MobileClient
                    info={
                      Object {
                        "balance": 220,
                        "fam": "Григорьев",
                        "id": 120,
                        "im": "Григорий",
                        "otch": "Григорьевич",
                      }
                    }
                  />,
                ],
                "className": "MobileCompanyClients",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "101",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 200,
                      "fam": "Иванов",
                      "id": 101,
                      "im": "Иван",
                      "otch": "Иванович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "105",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "110",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 180,
                      "fam": "Петров",
                      "id": 110,
                      "im": "Пётр",
                      "otch": "Петрович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "120",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": 220,
                      "fam": "Григорьев",
                      "id": 120,
                      "im": "Григорий",
                      "otch": "Григорьевич",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "AddNewClient",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "value": "Добавить клиента",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Проверка кнопки сортировки списка абонентов: заблокированные 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileCompany
    clients={
      Array [
        Object {
          "balance": 200,
          "fam": "Иванов",
          "id": 101,
          "im": "Иван",
          "otch": "Иванович",
        },
        Object {
          "balance": -250,
          "fam": "Сидоров",
          "id": 105,
          "im": "Сидор",
          "otch": "Сидорович",
        },
        Object {
          "balance": 180,
          "fam": "Петров",
          "id": 110,
          "im": "Пётр",
          "otch": "Петрович",
        },
        Object {
          "balance": 220,
          "fam": "Григорьев",
          "id": 120,
          "im": "Григорий",
          "otch": "Григорьевич",
        },
      ]
    }
    name="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="mts"
          onClick={[Function]}
          type="button"
          value="MTS"
        />,
        <input
          onClick={[Function]}
          type="button"
          value="Velcom"
        />,
        <div
          className="MobileCompanyName"
        >
          Компания «
          Velcom
          »
        </div>,
        <input
          className="All"
          id="Все"
          onClick={[Function]}
          type="button"
        />,
        <input
          className="ButtonActive"
          onClick={[Function]}
          type="button"
          value="Активные"
        />,
        <input
          className="ButtonBlocked"
          onClick={[Function]}
          type="button"
          value="Заблокированные"
        />,
        <table
          className="ItemsList"
        >
          <thead>
            <tr
              className="ListHeader"
            >
              <th>
                Фамилия
              </th>
              <th>
                Имя
              </th>
              <th>
                Отчество
              </th>
              <th>
                Баланс
              </th>
              <th>
                Статус
              </th>
              <th>
                Редактировать
              </th>
              <th>
                Удалить
              </th>
            </tr>
          </thead>
          <tbody
            className="MobileCompanyClients"
          >
            <MobileClient
              info={
                Object {
                  "balance": -250,
                  "fam": "Сидоров",
                  "id": 105,
                  "im": "Сидор",
                  "otch": "Сидорович",
                }
              }
            />
          </tbody>
        </table>,
        <input
          className="AddNewClient"
          disabled={false}
          onClick={[Function]}
          type="button"
          value="Добавить клиента"
        />,
        false,
        false,
      ],
      "className": "MobileCompany",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mts",
          "onClick": [Function],
          "type": "button",
          "value": "MTS",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onClick": [Function],
          "type": "button",
          "value": "Velcom",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "className": "MobileCompanyName",
        },
        "ref": null,
        "rendered": Array [
          "Компания «",
          "Velcom",
          "»",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "All",
          "id": "Все",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonActive",
          "onClick": [Function],
          "type": "button",
          "value": "Активные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "ButtonBlocked",
          "onClick": [Function],
          "type": "button",
          "value": "Заблокированные",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>,
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
            </tbody>,
          ],
          "className": "ItemsList",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Фамилия
                  </th>,
                  <th>
                    Имя
                  </th>,
                  <th>
                    Отчество
                  </th>,
                  <th>
                    Баланс
                  </th>,
                  <th>
                    Статус
                  </th>,
                  <th>
                    Редактировать
                  </th>,
                  <th>
                    Удалить
                  </th>,
                ],
                "className": "ListHeader",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчество",
                  },
                  "ref": null,
                  "rendered": "Отчество",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Редактировать",
                  },
                  "ref": null,
                  "rendered": "Редактировать",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Удалить",
                  },
                  "ref": null,
                  "rendered": "Удалить",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />,
                undefined,
                undefined,
              ],
              "className": "MobileCompanyClients",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": "105",
                "nodeType": "class",
                "props": Object {
                  "info": Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              undefined,
              undefined,
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "AddNewClient",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "value": "Добавить клиента",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="mts"
            onClick={[Function]}
            type="button"
            value="MTS"
          />,
          <input
            onClick={[Function]}
            type="button"
            value="Velcom"
          />,
          <div
            className="MobileCompanyName"
          >
            Компания «
            Velcom
            »
          </div>,
          <input
            className="All"
            id="Все"
            onClick={[Function]}
            type="button"
          />,
          <input
            className="ButtonActive"
            onClick={[Function]}
            type="button"
            value="Активные"
          />,
          <input
            className="ButtonBlocked"
            onClick={[Function]}
            type="button"
            value="Заблокированные"
          />,
          <table
            className="ItemsList"
          >
            <thead>
              <tr
                className="ListHeader"
              >
                <th>
                  Фамилия
                </th>
                <th>
                  Имя
                </th>
                <th>
                  Отчество
                </th>
                <th>
                  Баланс
                </th>
                <th>
                  Статус
                </th>
                <th>
                  Редактировать
                </th>
                <th>
                  Удалить
                </th>
              </tr>
            </thead>
            <tbody
              className="MobileCompanyClients"
            >
              <MobileClient
                info={
                  Object {
                    "balance": -250,
                    "fam": "Сидоров",
                    "id": 105,
                    "im": "Сидор",
                    "otch": "Сидорович",
                  }
                }
              />
            </tbody>
          </table>,
          <input
            className="AddNewClient"
            disabled={false}
            onClick={[Function]}
            type="button"
            value="Добавить клиента"
          />,
          false,
          false,
        ],
        "className": "MobileCompany",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mts",
            "onClick": [Function],
            "type": "button",
            "value": "MTS",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onClick": [Function],
            "type": "button",
            "value": "Velcom",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Компания «",
              "Velcom",
              "»",
            ],
            "className": "MobileCompanyName",
          },
          "ref": null,
          "rendered": Array [
            "Компания «",
            "Velcom",
            "»",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "All",
            "id": "Все",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonActive",
            "onClick": [Function],
            "type": "button",
            "value": "Активные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "ButtonBlocked",
            "onClick": [Function],
            "type": "button",
            "value": "Заблокированные",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>
              </thead>,
              <tbody
                className="MobileCompanyClients"
              >
                <MobileClient
                  info={
                    Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "ItemsList",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr
                  className="ListHeader"
                >
                  <th>
                    Фамилия
                  </th>
                  <th>
                    Имя
                  </th>
                  <th>
                    Отчество
                  </th>
                  <th>
                    Баланс
                  </th>
                  <th>
                    Статус
                  </th>
                  <th>
                    Редактировать
                  </th>
                  <th>
                    Удалить
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Фамилия
                    </th>,
                    <th>
                      Имя
                    </th>,
                    <th>
                      Отчество
                    </th>,
                    <th>
                      Баланс
                    </th>,
                    <th>
                      Статус
                    </th>,
                    <th>
                      Редактировать
                    </th>,
                    <th>
                      Удалить
                    </th>,
                  ],
                  "className": "ListHeader",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчество",
                    },
                    "ref": null,
                    "rendered": "Отчество",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Редактировать",
                    },
                    "ref": null,
                    "rendered": "Редактировать",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Удалить",
                    },
                    "ref": null,
                    "rendered": "Удалить",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  <MobileClient
                    info={
                      Object {
                        "balance": -250,
                        "fam": "Сидоров",
                        "id": 105,
                        "im": "Сидор",
                        "otch": "Сидорович",
                      }
                    }
                  />,
                  undefined,
                  undefined,
                ],
                "className": "MobileCompanyClients",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                Object {
                  "instance": null,
                  "key": "105",
                  "nodeType": "class",
                  "props": Object {
                    "info": Object {
                      "balance": -250,
                      "fam": "Сидоров",
                      "id": 105,
                      "im": "Сидор",
                      "otch": "Сидорович",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                undefined,
                undefined,
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "AddNewClient",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "value": "Добавить клиента",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`работа кнопки mts 1`] = `
<div
  className="MobileCompany"
>
  <input
    className="mts"
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <div
    className="MobileCompanyName"
  >
    Компания «
    Velcom
    »
  </div>
  <input
    className="All"
    id="Все"
    onClick={[Function]}
    type="button"
  />
  <input
    className="ButtonActive"
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    className="ButtonBlocked"
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <table
    className="ItemsList"
  >
    <thead>
      <tr
        className="ListHeader"
      >
        <th>
          Фамилия
        </th>
        <th>
          Имя
        </th>
        <th>
          Отчество
        </th>
        <th>
          Баланс
        </th>
        <th>
          Статус
        </th>
        <th>
          Редактировать
        </th>
        <th>
          Удалить
        </th>
      </tr>
    </thead>
    <tbody
      className="MobileCompanyClients"
    >
      <tr
        className="MobileClient"
      >
        <td>
          Иванов
        </td>
        <td>
          Иван
        </td>
        <td>
          Иванович
        </td>
        <td>
          200
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Сидоров
        </td>
        <td>
          Сидор
        </td>
        <td>
          Сидорович
        </td>
        <td>
          -250
        </td>
        <td
          className="Blocked"
        >
          Blocked
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Петров
        </td>
        <td>
          Пётр
        </td>
        <td>
          Петрович
        </td>
        <td>
          180
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Григорьев
        </td>
        <td>
          Григорий
        </td>
        <td>
          Григорьевич
        </td>
        <td>
          220
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
    </tbody>
  </table>
  <input
    className="AddNewClient"
    disabled={false}
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
</div>
`;

exports[`работа кнопки mts 2`] = `
<div
  className="MobileCompany"
>
  <input
    className="mts"
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <div
    className="MobileCompanyName"
  >
    Компания «
    MTS
    »
  </div>
  <input
    className="All"
    id="Все"
    onClick={[Function]}
    type="button"
  />
  <input
    className="ButtonActive"
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    className="ButtonBlocked"
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <table
    className="ItemsList"
  >
    <thead>
      <tr
        className="ListHeader"
      >
        <th>
          Фамилия
        </th>
        <th>
          Имя
        </th>
        <th>
          Отчество
        </th>
        <th>
          Баланс
        </th>
        <th>
          Статус
        </th>
        <th>
          Редактировать
        </th>
        <th>
          Удалить
        </th>
      </tr>
    </thead>
    <tbody
      className="MobileCompanyClients"
    >
      <tr
        className="MobileClient"
      >
        <td>
          Иванов
        </td>
        <td>
          Иван
        </td>
        <td>
          Иванович
        </td>
        <td>
          200
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Сидоров
        </td>
        <td>
          Сидор
        </td>
        <td>
          Сидорович
        </td>
        <td>
          -250
        </td>
        <td
          className="Blocked"
        >
          Blocked
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Петров
        </td>
        <td>
          Пётр
        </td>
        <td>
          Петрович
        </td>
        <td>
          180
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Григорьев
        </td>
        <td>
          Григорий
        </td>
        <td>
          Григорьевич
        </td>
        <td>
          220
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
    </tbody>
  </table>
  <input
    className="AddNewClient"
    disabled={false}
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
</div>
`;

exports[`работа кнопки mts 3`] = `
<div
  className="MobileCompany"
>
  <input
    className="mts"
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <div
    className="MobileCompanyName"
  >
    Компания «
    MTS
    »
  </div>
  <input
    className="All"
    id="Все"
    onClick={[Function]}
    type="button"
  />
  <input
    className="ButtonActive"
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    className="ButtonBlocked"
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <table
    className="ItemsList"
  >
    <thead>
      <tr
        className="ListHeader"
      >
        <th>
          Фамилия
        </th>
        <th>
          Имя
        </th>
        <th>
          Отчество
        </th>
        <th>
          Баланс
        </th>
        <th>
          Статус
        </th>
        <th>
          Редактировать
        </th>
        <th>
          Удалить
        </th>
      </tr>
    </thead>
    <tbody
      className="MobileCompanyClients"
    >
      <tr
        className="MobileClient"
      >
        <td>
          Иванов
        </td>
        <td>
          Иван
        </td>
        <td>
          Иванович
        </td>
        <td>
          200
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Сидоров
        </td>
        <td>
          Сидор
        </td>
        <td>
          Сидорович
        </td>
        <td>
          -250
        </td>
        <td
          className="Blocked"
        >
          Blocked
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Петров
        </td>
        <td>
          Пётр
        </td>
        <td>
          Петрович
        </td>
        <td>
          180
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Григорьев
        </td>
        <td>
          Григорий
        </td>
        <td>
          Григорьевич
        </td>
        <td>
          220
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
    </tbody>
  </table>
  <input
    className="AddNewClient"
    disabled={false}
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
</div>
`;

exports[`работа кнопки Редактировать 1`] = `
<div
  className="MobileCompany"
>
  <input
    className="mts"
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <div
    className="MobileCompanyName"
  >
    Компания «
    Velcom
    »
  </div>
  <input
    className="All"
    id="Все"
    onClick={[Function]}
    type="button"
  />
  <input
    className="ButtonActive"
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    className="ButtonBlocked"
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <table
    className="ItemsList"
  >
    <thead>
      <tr
        className="ListHeader"
      >
        <th>
          Фамилия
        </th>
        <th>
          Имя
        </th>
        <th>
          Отчество
        </th>
        <th>
          Баланс
        </th>
        <th>
          Статус
        </th>
        <th>
          Редактировать
        </th>
        <th>
          Удалить
        </th>
      </tr>
    </thead>
    <tbody
      className="MobileCompanyClients"
    >
      <tr
        className="MobileClient"
      >
        <td>
          Иванов
        </td>
        <td>
          Иван
        </td>
        <td>
          Иванович
        </td>
        <td>
          200
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Сидоров
        </td>
        <td>
          Сидор
        </td>
        <td>
          Сидорович
        </td>
        <td>
          -250
        </td>
        <td
          className="Blocked"
        >
          Blocked
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Петров
        </td>
        <td>
          Пётр
        </td>
        <td>
          Петрович
        </td>
        <td>
          180
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Григорьев
        </td>
        <td>
          Григорий
        </td>
        <td>
          Григорьевич
        </td>
        <td>
          220
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
    </tbody>
  </table>
  <input
    className="AddNewClient"
    disabled={false}
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
</div>
`;

exports[`работа кнопки Редактировать 2`] = `
<div
  className="MobileCompany"
>
  <input
    className="mts"
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <div
    className="MobileCompanyName"
  >
    Компания «
    Velcom
    »
  </div>
  <input
    className="All"
    id="Все"
    onClick={[Function]}
    type="button"
  />
  <input
    className="ButtonActive"
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    className="ButtonBlocked"
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <table
    className="ItemsList"
  >
    <thead>
      <tr
        className="ListHeader"
      >
        <th>
          Фамилия
        </th>
        <th>
          Имя
        </th>
        <th>
          Отчество
        </th>
        <th>
          Баланс
        </th>
        <th>
          Статус
        </th>
        <th>
          Редактировать
        </th>
        <th>
          Удалить
        </th>
      </tr>
    </thead>
    <tbody
      className="MobileCompanyClients"
    >
      <tr
        className="MobileClient"
      >
        <td>
          Иванов
        </td>
        <td>
          Иван
        </td>
        <td>
          Иванович
        </td>
        <td>
          200
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Сидоров
        </td>
        <td>
          Сидор
        </td>
        <td>
          Сидорович
        </td>
        <td>
          -250
        </td>
        <td
          className="Blocked"
        >
          Blocked
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Петров
        </td>
        <td>
          Пётр
        </td>
        <td>
          Петрович
        </td>
        <td>
          180
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Григорьев
        </td>
        <td>
          Григорий
        </td>
        <td>
          Григорьевич
        </td>
        <td>
          220
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
    </tbody>
  </table>
  <input
    className="AddNewClient"
    disabled={true}
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
  <div
    className="EditorField"
  >
    <h4>
      Редактирование информации абонента
    </h4>
    <label>
      <div
        className="InpPrefield"
      >
        Фамилия
      </div>
      <input
        defaultValue="Иванов"
        onChange={[Function]}
        type="text"
      />
    </label>
    <br />
    <label>
      <div
        className="InpPrefield"
      >
        Имя
      </div>
      <input
        defaultValue="Иван"
        onChange={[Function]}
        type="text"
      />
    </label>
    <br />
    <label>
      <div
        className="InpPrefield"
      >
        Отчество
      </div>
      <input
        defaultValue="Иванович"
        onChange={[Function]}
        type="text"
      />
    </label>
    <br />
    <label>
      <div
        className="InpPrefield"
      >
        Баланс
      </div>
      <input
        defaultValue={200}
        onChange={[Function]}
        type="text"
      />
    </label>
    <br />
    <input
      className="SaveButton"
      onClick={[Function]}
      type="button"
      value="Сохранить"
    />
    <input
      className="CancelButton"
      onClick={[Function]}
      type="button"
      value="Отмена"
    />
  </div>
</div>
`;

exports[`работа кнопки Редактировать 3`] = `
<div
  className="MobileCompany"
>
  <input
    className="mts"
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <div
    className="MobileCompanyName"
  >
    Компания «
    Velcom
    »
  </div>
  <input
    className="All"
    id="Все"
    onClick={[Function]}
    type="button"
  />
  <input
    className="ButtonActive"
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    className="ButtonBlocked"
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <table
    className="ItemsList"
  >
    <thead>
      <tr
        className="ListHeader"
      >
        <th>
          Фамилия
        </th>
        <th>
          Имя
        </th>
        <th>
          Отчество
        </th>
        <th>
          Баланс
        </th>
        <th>
          Статус
        </th>
        <th>
          Редактировать
        </th>
        <th>
          Удалить
        </th>
      </tr>
    </thead>
    <tbody
      className="MobileCompanyClients"
    >
      <tr
        className="MobileClient"
      >
        <td>
          Иванов
        </td>
        <td>
          Иван
        </td>
        <td>
          Иванович
        </td>
        <td>
          200
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Сидоров
        </td>
        <td>
          Сидор
        </td>
        <td>
          Сидорович
        </td>
        <td>
          -250
        </td>
        <td
          className="Blocked"
        >
          Blocked
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Петров
        </td>
        <td>
          Пётр
        </td>
        <td>
          Петрович
        </td>
        <td>
          180
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Григорьев
        </td>
        <td>
          Григорий
        </td>
        <td>
          Григорьевич
        </td>
        <td>
          220
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
    </tbody>
  </table>
  <input
    className="AddNewClient"
    disabled={true}
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
  <div
    className="EditorField"
  >
    <h4>
      Редактирование информации абонента
    </h4>
    <label>
      <div
        className="InpPrefield"
      >
        Фамилия
      </div>
      <input
        defaultValue="Иванов"
        onChange={[Function]}
        type="text"
      />
    </label>
    <br />
    <label>
      <div
        className="InpPrefield"
      >
        Имя
      </div>
      <input
        defaultValue="Иван"
        onChange={[Function]}
        type="text"
      />
    </label>
    <br />
    <label>
      <div
        className="InpPrefield"
      >
        Отчество
      </div>
      <input
        defaultValue="Иванович"
        onChange={[Function]}
        type="text"
      />
    </label>
    <br />
    <label>
      <div
        className="InpPrefield"
      >
        Баланс
      </div>
      <input
        defaultValue={200}
        onChange={[Function]}
        type="text"
      />
    </label>
    <br />
    <input
      className="SaveButton"
      onClick={[Function]}
      type="button"
      value="Сохранить"
    />
    <input
      className="CancelButton"
      onClick={[Function]}
      type="button"
      value="Отмена"
    />
  </div>
</div>
`;

exports[`работа кнопки Удалить 1`] = `
<div
  className="MobileCompany"
>
  <input
    className="mts"
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <div
    className="MobileCompanyName"
  >
    Компания «
    Velcom
    »
  </div>
  <input
    className="All"
    id="Все"
    onClick={[Function]}
    type="button"
  />
  <input
    className="ButtonActive"
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    className="ButtonBlocked"
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <table
    className="ItemsList"
  >
    <thead>
      <tr
        className="ListHeader"
      >
        <th>
          Фамилия
        </th>
        <th>
          Имя
        </th>
        <th>
          Отчество
        </th>
        <th>
          Баланс
        </th>
        <th>
          Статус
        </th>
        <th>
          Редактировать
        </th>
        <th>
          Удалить
        </th>
      </tr>
    </thead>
    <tbody
      className="MobileCompanyClients"
    >
      <tr
        className="MobileClient"
      >
        <td>
          Иванов
        </td>
        <td>
          Иван
        </td>
        <td>
          Иванович
        </td>
        <td>
          200
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Сидоров
        </td>
        <td>
          Сидор
        </td>
        <td>
          Сидорович
        </td>
        <td>
          -250
        </td>
        <td
          className="Blocked"
        >
          Blocked
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Петров
        </td>
        <td>
          Пётр
        </td>
        <td>
          Петрович
        </td>
        <td>
          180
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Григорьев
        </td>
        <td>
          Григорий
        </td>
        <td>
          Григорьевич
        </td>
        <td>
          220
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
    </tbody>
  </table>
  <input
    className="AddNewClient"
    disabled={false}
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
</div>
`;

exports[`работа кнопки Удалить 2`] = `
<div
  className="MobileCompany"
>
  <input
    className="mts"
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <div
    className="MobileCompanyName"
  >
    Компания «
    Velcom
    »
  </div>
  <input
    className="All"
    id="Все"
    onClick={[Function]}
    type="button"
  />
  <input
    className="ButtonActive"
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    className="ButtonBlocked"
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <table
    className="ItemsList"
  >
    <thead>
      <tr
        className="ListHeader"
      >
        <th>
          Фамилия
        </th>
        <th>
          Имя
        </th>
        <th>
          Отчество
        </th>
        <th>
          Баланс
        </th>
        <th>
          Статус
        </th>
        <th>
          Редактировать
        </th>
        <th>
          Удалить
        </th>
      </tr>
    </thead>
    <tbody
      className="MobileCompanyClients"
    >
      <tr
        className="MobileClient"
      >
        <td>
          Иванов
        </td>
        <td>
          Иван
        </td>
        <td>
          Иванович
        </td>
        <td>
          200
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Сидоров
        </td>
        <td>
          Сидор
        </td>
        <td>
          Сидорович
        </td>
        <td>
          -250
        </td>
        <td
          className="Blocked"
        >
          Blocked
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Петров
        </td>
        <td>
          Пётр
        </td>
        <td>
          Петрович
        </td>
        <td>
          180
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Григорьев
        </td>
        <td>
          Григорий
        </td>
        <td>
          Григорьевич
        </td>
        <td>
          220
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
    </tbody>
  </table>
  <input
    className="AddNewClient"
    disabled={false}
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
</div>
`;

exports[`работа кнопки Удалить 3`] = `
<div
  className="MobileCompany"
>
  <input
    className="mts"
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <div
    className="MobileCompanyName"
  >
    Компания «
    Velcom
    »
  </div>
  <input
    className="All"
    id="Все"
    onClick={[Function]}
    type="button"
  />
  <input
    className="ButtonActive"
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    className="ButtonBlocked"
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <table
    className="ItemsList"
  >
    <thead>
      <tr
        className="ListHeader"
      >
        <th>
          Фамилия
        </th>
        <th>
          Имя
        </th>
        <th>
          Отчество
        </th>
        <th>
          Баланс
        </th>
        <th>
          Статус
        </th>
        <th>
          Редактировать
        </th>
        <th>
          Удалить
        </th>
      </tr>
    </thead>
    <tbody
      className="MobileCompanyClients"
    >
      <tr
        className="MobileClient"
      >
        <td>
          Иванов
        </td>
        <td>
          Иван
        </td>
        <td>
          Иванович
        </td>
        <td>
          200
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Сидоров
        </td>
        <td>
          Сидор
        </td>
        <td>
          Сидорович
        </td>
        <td>
          -250
        </td>
        <td
          className="Blocked"
        >
          Blocked
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Петров
        </td>
        <td>
          Пётр
        </td>
        <td>
          Петрович
        </td>
        <td>
          180
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
      <tr
        className="MobileClient"
      >
        <td>
          Григорьев
        </td>
        <td>
          Григорий
        </td>
        <td>
          Григорьевич
        </td>
        <td>
          220
        </td>
        <td
          className="Active"
        >
          Active
        </td>
        <td>
          <input
            className="Edit"
            onClick={[Function]}
            type="button"
            value="Редактировать"
          />
           
        </td>
        <td>
          <input
            className="Delete"
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
           
        </td>
      </tr>
    </tbody>
  </table>
  <input
    className="AddNewClient"
    disabled={false}
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
</div>
`;
